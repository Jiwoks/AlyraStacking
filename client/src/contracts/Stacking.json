{
  "contractName": "Stacking",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_rewardPerSecond",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowedERC20s",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardsPerSecond",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stackers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "date",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "pendingRewards",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_tokenAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_aggregator",
          "type": "address"
        }
      ],
      "name": "allowToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_erc20Address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_erc20Address",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_rewardPerSecond\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_aggregator\",\"type\":\"address\"}],\"name\":\"allowToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowedERC20s\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_erc20Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardsPerSecond\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stackers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"date\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pendingRewards\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_erc20Address\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"allowToken(address,address)\":{\"notice\":\"Owner acl an ERC20 token\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Stacking.sol\":\"Stacking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c1f59e0c7334c22fb54288728fc32546bdc9c8133d6db0d60223e3c28f52120\",\"dweb:/ipfs/QmeuxawUVBhMWQJXaEhhnubCTc4Jwn5wYK8gbhq6NjrpfG\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/Stacking.sol\":{\"keccak256\":\"0xe43721fb352b862a2b31b970630aab7020f4fc893f8a52d6275aafa6f9af10df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea8a898c30088c10688b6a2c21fda927cab887415bda9ac61022fc10cd801deb\",\"dweb:/ipfs/QmbuNcNbbZEqFmGfyN53CSo1sGoFafkGiJoPiNE57vqqAH\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200131f3803806200131f8339818101604052810190620000379190620001c6565b620000576200004b620000ba60201b60201c565b620000c260201b60201c565b80600281905550739326bfa02add2366b30bacb125260af641031331600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001f8565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b6000819050919050565b620001a0816200018b565b8114620001ac57600080fd5b50565b600081519050620001c08162000195565b92915050565b600060208284031215620001df57620001de62000186565b5b6000620001ef84828501620001af565b91505092915050565b61111780620002086000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638324328911610066578063832432891461011f5780638da5cb5b14610151578063eacdaabc1461016f578063f2fde38b1461018d578063f3fef3a3146101a95761009e565b806321fcbf57146100a357806347e7ef24146100bf5780634e71d92d146100db57806369cc6af4146100e5578063715018a614610115575b600080fd5b6100bd60048036038101906100b89190610a49565b6101c5565b005b6100d960048036038101906100d49190610abf565b6102c3565b005b6100e3610534565b005b6100ff60048036038101906100fa9190610aff565b610536565b60405161010c9190610b3b565b60405180910390f35b61011d610569565b005b61013960048036038101906101349190610b56565b6105f1565b60405161014893929190610ba5565b60405180910390f35b610159610628565b6040516101669190610b3b565b60405180910390f35b610177610651565b6040516101849190610bdc565b60405180910390f35b6101a760048036038101906101a29190610bf7565b610657565b005b6101c360048036038101906101be9190610abf565b61074e565b005b6101cd6108dc565b73ffffffffffffffffffffffffffffffffffffffff166101eb610628565b73ffffffffffffffffffffffffffffffffffffffff1614610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890610c81565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600073ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610391576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038890610d13565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015414610443576002548160000154426104309190610d62565b61043a9190610d96565b81600201819055505b428160000181905550818160010160008282546104609190610df0565b925050819055504281600001819055508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016104ad93929190610e46565b6020604051808303816000875af11580156104cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f09190610eb5565b61052f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052690610f2e565b60405180910390fd5b505050565b565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105716108dc565b73ffffffffffffffffffffffffffffffffffffffff1661058f610628565b73ffffffffffffffffffffffffffffffffffffffff16146105e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dc90610c81565b60405180910390fd5b6105ef60006108e4565b565b6005602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154905083565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b61065f6108dc565b73ffffffffffffffffffffffffffffffffffffffff1661067d610628565b73ffffffffffffffffffffffffffffffffffffffff16146106d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ca90610c81565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073990610fc0565b60405180910390fd5b61074b816108e4565b50565b60008111610791576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107889061102c565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508181600101541015610858576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084f90611098565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016108939291906110b8565b6020604051808303816000875af11580156108b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d69190610eb5565b50505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109d8826109ad565b9050919050565b60006109ea826109cd565b9050919050565b6109fa816109df565b8114610a0557600080fd5b50565b600081359050610a17816109f1565b92915050565b610a26816109cd565b8114610a3157600080fd5b50565b600081359050610a4381610a1d565b92915050565b60008060408385031215610a6057610a5f6109a8565b5b6000610a6e85828601610a08565b9250506020610a7f85828601610a34565b9150509250929050565b6000819050919050565b610a9c81610a89565b8114610aa757600080fd5b50565b600081359050610ab981610a93565b92915050565b60008060408385031215610ad657610ad56109a8565b5b6000610ae485828601610a08565b9250506020610af585828601610aaa565b9150509250929050565b600060208284031215610b1557610b146109a8565b5b6000610b2384828501610a08565b91505092915050565b610b35816109cd565b82525050565b6000602082019050610b506000830184610b2c565b92915050565b60008060408385031215610b6d57610b6c6109a8565b5b6000610b7b85828601610a34565b9250506020610b8c85828601610a08565b9150509250929050565b610b9f81610a89565b82525050565b6000606082019050610bba6000830186610b96565b610bc76020830185610b96565b610bd46040830184610b96565b949350505050565b6000602082019050610bf16000830184610b96565b92915050565b600060208284031215610c0d57610c0c6109a8565b5b6000610c1b84828501610a34565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c6b602083610c24565b9150610c7682610c35565b602082019050919050565b60006020820190508181036000830152610c9a81610c5e565b9050919050565b7f5468697320746f6b656e20686173206e6f74206265656e20616c6c6f7765642060008201527f7965740000000000000000000000000000000000000000000000000000000000602082015250565b6000610cfd602383610c24565b9150610d0882610ca1565b604082019050919050565b60006020820190508181036000830152610d2c81610cf0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6d82610a89565b9150610d7883610a89565b925082821015610d8b57610d8a610d33565b5b828203905092915050565b6000610da182610a89565b9150610dac83610a89565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610de557610de4610d33565b5b828202905092915050565b6000610dfb82610a89565b9150610e0683610a89565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3b57610e3a610d33565b5b828201905092915050565b6000606082019050610e5b6000830186610b2c565b610e686020830185610b2c565b610e756040830184610b96565b949350505050565b60008115159050919050565b610e9281610e7d565b8114610e9d57600080fd5b50565b600081519050610eaf81610e89565b92915050565b600060208284031215610ecb57610eca6109a8565b5b6000610ed984828501610ea0565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610f18600f83610c24565b9150610f2382610ee2565b602082019050919050565b60006020820190508181036000830152610f4781610f0b565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610faa602683610c24565b9150610fb582610f4e565b604082019050919050565b60006020820190508181036000830152610fd981610f9d565b9050919050565b7f596f75206d7573742070726f7669646520616e20616d6f756e74203e20300000600082015250565b6000611016601e83610c24565b915061102182610fe0565b602082019050919050565b6000602082019050818103600083015261104581611009565b9050919050565b7f596f7520646f6e27742068617665207468697320746f6b656e00000000000000600082015250565b6000611082601983610c24565b915061108d8261104c565b602082019050919050565b600060208201905081810360008301526110b181611075565b9050919050565b60006040820190506110cd6000830185610b2c565b6110da6020830184610b96565b939250505056fea26469706673582212207113af624b3a042bee12d7eabc03b486f0e2674a74ba3496f11a11cf51ef154564736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c80638324328911610066578063832432891461011f5780638da5cb5b14610151578063eacdaabc1461016f578063f2fde38b1461018d578063f3fef3a3146101a95761009e565b806321fcbf57146100a357806347e7ef24146100bf5780634e71d92d146100db57806369cc6af4146100e5578063715018a614610115575b600080fd5b6100bd60048036038101906100b89190610a49565b6101c5565b005b6100d960048036038101906100d49190610abf565b6102c3565b005b6100e3610534565b005b6100ff60048036038101906100fa9190610aff565b610536565b60405161010c9190610b3b565b60405180910390f35b61011d610569565b005b61013960048036038101906101349190610b56565b6105f1565b60405161014893929190610ba5565b60405180910390f35b610159610628565b6040516101669190610b3b565b60405180910390f35b610177610651565b6040516101849190610bdc565b60405180910390f35b6101a760048036038101906101a29190610bf7565b610657565b005b6101c360048036038101906101be9190610abf565b61074e565b005b6101cd6108dc565b73ffffffffffffffffffffffffffffffffffffffff166101eb610628565b73ffffffffffffffffffffffffffffffffffffffff1614610241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023890610c81565b60405180910390fd5b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b600073ffffffffffffffffffffffffffffffffffffffff16600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610391576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038890610d13565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090506000816000015414610443576002548160000154426104309190610d62565b61043a9190610d96565b81600201819055505b428160000181905550818160010160008282546104609190610df0565b925050819055504281600001819055508273ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b81526004016104ad93929190610e46565b6020604051808303816000875af11580156104cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f09190610eb5565b61052f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161052690610f2e565b60405180910390fd5b505050565b565b60036020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6105716108dc565b73ffffffffffffffffffffffffffffffffffffffff1661058f610628565b73ffffffffffffffffffffffffffffffffffffffff16146105e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105dc90610c81565b60405180910390fd5b6105ef60006108e4565b565b6005602052816000526040600020602052806000526040600020600091509150508060000154908060010154908060020154905083565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b61065f6108dc565b73ffffffffffffffffffffffffffffffffffffffff1661067d610628565b73ffffffffffffffffffffffffffffffffffffffff16146106d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106ca90610c81565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161073990610fc0565b60405180910390fd5b61074b816108e4565b50565b60008111610791576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107889061102c565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090508181600101541015610858576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161084f90611098565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b81526004016108939291906110b8565b6020604051808303816000875af11580156108b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d69190610eb5565b50505050565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006109d8826109ad565b9050919050565b60006109ea826109cd565b9050919050565b6109fa816109df565b8114610a0557600080fd5b50565b600081359050610a17816109f1565b92915050565b610a26816109cd565b8114610a3157600080fd5b50565b600081359050610a4381610a1d565b92915050565b60008060408385031215610a6057610a5f6109a8565b5b6000610a6e85828601610a08565b9250506020610a7f85828601610a34565b9150509250929050565b6000819050919050565b610a9c81610a89565b8114610aa757600080fd5b50565b600081359050610ab981610a93565b92915050565b60008060408385031215610ad657610ad56109a8565b5b6000610ae485828601610a08565b9250506020610af585828601610aaa565b9150509250929050565b600060208284031215610b1557610b146109a8565b5b6000610b2384828501610a08565b91505092915050565b610b35816109cd565b82525050565b6000602082019050610b506000830184610b2c565b92915050565b60008060408385031215610b6d57610b6c6109a8565b5b6000610b7b85828601610a34565b9250506020610b8c85828601610a08565b9150509250929050565b610b9f81610a89565b82525050565b6000606082019050610bba6000830186610b96565b610bc76020830185610b96565b610bd46040830184610b96565b949350505050565b6000602082019050610bf16000830184610b96565b92915050565b600060208284031215610c0d57610c0c6109a8565b5b6000610c1b84828501610a34565b91505092915050565b600082825260208201905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000610c6b602083610c24565b9150610c7682610c35565b602082019050919050565b60006020820190508181036000830152610c9a81610c5e565b9050919050565b7f5468697320746f6b656e20686173206e6f74206265656e20616c6c6f7765642060008201527f7965740000000000000000000000000000000000000000000000000000000000602082015250565b6000610cfd602383610c24565b9150610d0882610ca1565b604082019050919050565b60006020820190508181036000830152610d2c81610cf0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d6d82610a89565b9150610d7883610a89565b925082821015610d8b57610d8a610d33565b5b828203905092915050565b6000610da182610a89565b9150610dac83610a89565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610de557610de4610d33565b5b828202905092915050565b6000610dfb82610a89565b9150610e0683610a89565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e3b57610e3a610d33565b5b828201905092915050565b6000606082019050610e5b6000830186610b2c565b610e686020830185610b2c565b610e756040830184610b96565b949350505050565b60008115159050919050565b610e9281610e7d565b8114610e9d57600080fd5b50565b600081519050610eaf81610e89565b92915050565b600060208284031215610ecb57610eca6109a8565b5b6000610ed984828501610ea0565b91505092915050565b7f5472616e73666572206661696c65640000000000000000000000000000000000600082015250565b6000610f18600f83610c24565b9150610f2382610ee2565b602082019050919050565b60006020820190508181036000830152610f4781610f0b565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000610faa602683610c24565b9150610fb582610f4e565b604082019050919050565b60006020820190508181036000830152610fd981610f9d565b9050919050565b7f596f75206d7573742070726f7669646520616e20616d6f756e74203e20300000600082015250565b6000611016601e83610c24565b915061102182610fe0565b602082019050919050565b6000602082019050818103600083015261104581611009565b9050919050565b7f596f7520646f6e27742068617665207468697320746f6b656e00000000000000600082015250565b6000611082601983610c24565b915061108d8261104c565b602082019050919050565b600060208201905081810360008301526110b181611075565b9050919050565b60006040820190506110cd6000830185610b2c565b6110da6020830184610b96565b939250505056fea26469706673582212207113af624b3a042bee12d7eabc03b486f0e2674a74ba3496f11a11cf51ef154564736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1048:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:9",
                "type": ""
              }
            ],
            "src": "7:75:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:9"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:9"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:9",
                "type": ""
              }
            ],
            "src": "334:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:9"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:9",
                "type": ""
              }
            ],
            "src": "417:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "608:80:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "618:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "633:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "627:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "627:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "618:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "676:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "649:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "649:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "649:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "586:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "594:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "602:5:9",
                "type": ""
              }
            ],
            "src": "545:143:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "771:274:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "817:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "819:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "819:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "819:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "792:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "801:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "788:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "788:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "813:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "784:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "781:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "910:128:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "925:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "939:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "929:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "954:74:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1000:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1011:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "996:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "996:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1020:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "964:31:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "964:64:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "954:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "741:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "752:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "764:6:9",
                "type": ""
              }
            ],
            "src": "694:351:9"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13701:9",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:9",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:9",
                "type": ""
              }
            ],
            "src": "7:75:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:9"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:9",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:9"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:9",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:9",
                "type": ""
              }
            ],
            "src": "334:126:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:9",
                "type": ""
              }
            ],
            "src": "466:96:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "627:51:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "637:35:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "666:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "648:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "648:24:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "637:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_contract$_IERC20_$814",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "609:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "619:7:9",
                "type": ""
              }
            ],
            "src": "568:110:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "741:93:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "812:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "821:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "824:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "814:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "814:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "814:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "764:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "803:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_contract$_IERC20_$814",
                              "nodeType": "YulIdentifier",
                              "src": "771:31:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "771:38:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "761:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "761:49:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "754:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "754:57:9"
                  },
                  "nodeType": "YulIf",
                  "src": "751:77:9"
                }
              ]
            },
            "name": "validator_revert_t_contract$_IERC20_$814",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "734:5:9",
                "type": ""
              }
            ],
            "src": "684:150:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "906:101:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "916:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "938:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "925:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "925:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "916:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "995:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_contract$_IERC20_$814",
                      "nodeType": "YulIdentifier",
                      "src": "954:40:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "954:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "954:47:9"
                }
              ]
            },
            "name": "abi_decode_t_contract$_IERC20_$814",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "884:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "892:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "900:5:9",
                "type": ""
              }
            ],
            "src": "840:167:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1056:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1113:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1122:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1125:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1115:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1115:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1115:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1079:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1104:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "1086:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1086:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1076:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1076:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1069:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1069:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1066:63:9"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1049:5:9",
                "type": ""
              }
            ],
            "src": "1013:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1193:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1203:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1225:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1212:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1212:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1203:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1268:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "1241:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1241:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1241:33:9"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1171:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1179:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1187:5:9",
                "type": ""
              }
            ],
            "src": "1141:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1383:405:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1429:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1431:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1431:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1431:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1404:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1413:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1400:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1400:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1425:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1396:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1396:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1393:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1522:131:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1537:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1551:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1541:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1566:77:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1615:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1626:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1611:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1611:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1635:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$814",
                          "nodeType": "YulIdentifier",
                          "src": "1576:34:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1576:67:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1566:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1663:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1678:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1692:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1682:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1708:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1743:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1754:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1739:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1739:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1763:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1718:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1718:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1708:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$814t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1345:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1356:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1368:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1376:6:9",
                "type": ""
              }
            ],
            "src": "1286:502:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1839:32:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1849:16:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1860:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1849:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1821:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1831:7:9",
                "type": ""
              }
            ],
            "src": "1794:77:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1920:79:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1977:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1986:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1989:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1979:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1979:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1979:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1943:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1968:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "1950:17:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1950:24:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1940:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1940:35:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1933:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1933:43:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1930:63:9"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1913:5:9",
                "type": ""
              }
            ],
            "src": "1877:122:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2057:87:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2067:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2089:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2076:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2076:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2067:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2132:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "2105:26:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2105:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2105:33:9"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2035:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2043:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2051:5:9",
                "type": ""
              }
            ],
            "src": "2005:139:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2247:405:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2293:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2295:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2295:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2295:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2268:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2277:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2264:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2264:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2289:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2260:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2260:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2257:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2386:131:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2401:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2415:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2405:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2430:77:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2479:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2490:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2475:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2475:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2499:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$814",
                          "nodeType": "YulIdentifier",
                          "src": "2440:34:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2440:67:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2430:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2527:118:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2542:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2556:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2546:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2572:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2607:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2618:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2603:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2603:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2627:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2582:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2582:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2572:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$814t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2209:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2220:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2232:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2240:6:9",
                "type": ""
              }
            ],
            "src": "2150:502:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2738:277:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2784:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "2786:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2786:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2786:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2759:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2768:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2755:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2755:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2780:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2751:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2751:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2748:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2877:131:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2892:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2906:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2896:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2921:77:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2970:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2981:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2966:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2966:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2990:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$814",
                          "nodeType": "YulIdentifier",
                          "src": "2931:34:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2931:67:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2921:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$814",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2708:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2719:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2731:6:9",
                "type": ""
              }
            ],
            "src": "2658:357:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3086:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3103:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3126:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3108:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3108:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3096:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3096:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3096:37:9"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3074:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3081:3:9",
                "type": ""
              }
            ],
            "src": "3021:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3243:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3253:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3265:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3276:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3261:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3261:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3253:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3333:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3346:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3357:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3342:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3342:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3289:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3289:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3289:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3215:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3227:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3238:4:9",
                "type": ""
              }
            ],
            "src": "3145:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3470:405:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3516:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3518:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3518:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3518:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3491:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3500:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3487:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3487:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3512:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3483:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3483:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3480:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3609:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3624:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3638:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3628:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3653:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3688:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3699:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3684:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3684:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3708:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3663:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3663:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3653:6:9"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3736:132:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3751:16:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3765:2:9",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3755:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3781:77:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3830:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3841:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3826:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3826:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3850:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_contract$_IERC20_$814",
                          "nodeType": "YulIdentifier",
                          "src": "3791:34:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3791:67:9"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3781:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_contract$_IERC20_$814",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3432:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3443:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3455:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3463:6:9",
                "type": ""
              }
            ],
            "src": "3373:502:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3946:53:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3963:3:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3986:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3968:17:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3968:24:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3956:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3956:37:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3956:37:9"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3934:5:9",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3941:3:9",
                "type": ""
              }
            ],
            "src": "3881:118:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4159:288:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4169:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4181:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4192:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4177:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4177:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4169:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4249:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4262:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4273:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4258:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4258:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4205:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4205:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4205:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4330:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4343:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4354:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4339:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4339:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4286:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4286:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4286:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4412:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4425:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4436:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4421:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4421:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4368:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4368:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4368:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4115:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4127:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4135:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4143:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4154:4:9",
                "type": ""
              }
            ],
            "src": "4005:442:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4551:124:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4561:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4573:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4584:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4569:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4569:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4561:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4641:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4654:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4665:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4650:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4650:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4597:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4597:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4597:71:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4523:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4535:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4546:4:9",
                "type": ""
              }
            ],
            "src": "4453:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4747:263:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4793:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "4795:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4795:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4795:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4768:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4777:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4764:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4764:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4789:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4760:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4760:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4757:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4886:117:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4901:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4915:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4905:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4930:63:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4965:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4976:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4961:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4961:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4985:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4940:20:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4940:53:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4930:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4717:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4728:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4740:6:9",
                "type": ""
              }
            ],
            "src": "4681:329:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5112:73:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5129:3:9"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5134:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5122:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5122:19:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5122:19:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5150:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5169:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5174:4:9",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5165:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5165:14:9"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "5150:11:9"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5084:3:9",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "5089:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "5100:11:9",
                "type": ""
              }
            ],
            "src": "5016:169:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5297:76:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "5319:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5327:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5315:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5315:14:9"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5331:34:9",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5308:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5308:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5308:58:9"
                }
              ]
            },
            "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "5289:6:9",
                "type": ""
              }
            ],
            "src": "5191:182:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5525:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5535:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5601:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5606:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5542:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5542:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "5535:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5707:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                      "nodeType": "YulIdentifier",
                      "src": "5618:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5618:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5618:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5720:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5731:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5736:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5727:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5727:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5720:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5513:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5521:3:9",
                "type": ""
              }
            ],
            "src": "5379:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5922:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5932:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5944:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5955:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5940:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5940:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5932:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5979:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5990:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5975:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5975:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5998:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6004:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5994:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5994:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5968:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5968:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5968:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6024:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "6158:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6032:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6032:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6024:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5902:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5917:4:9",
                "type": ""
              }
            ],
            "src": "5751:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6282:116:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6304:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6312:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6300:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6300:14:9"
                      },
                      {
                        "hexValue": "5468697320746f6b656e20686173206e6f74206265656e20616c6c6f77656420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6316:34:9",
                        "type": "",
                        "value": "This token has not been allowed "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6293:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6293:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6293:58:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "6372:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6380:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6368:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6368:15:9"
                      },
                      {
                        "hexValue": "796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6385:5:9",
                        "type": "",
                        "value": "yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6361:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6361:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6361:30:9"
                }
              ]
            },
            "name": "store_literal_in_memory_4d1558be3f9088f9d72974cfcf6d367bcbbe9fc3b903297007a1631283b4ea71",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "6274:6:9",
                "type": ""
              }
            ],
            "src": "6176:222:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6550:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6560:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6626:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6631:2:9",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6567:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6567:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6560:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6732:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_4d1558be3f9088f9d72974cfcf6d367bcbbe9fc3b903297007a1631283b4ea71",
                      "nodeType": "YulIdentifier",
                      "src": "6643:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6643:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6643:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6745:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6756:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6761:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6752:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6752:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6745:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_4d1558be3f9088f9d72974cfcf6d367bcbbe9fc3b903297007a1631283b4ea71_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6538:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6546:3:9",
                "type": ""
              }
            ],
            "src": "6404:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6947:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6957:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6969:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6980:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6965:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6965:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6957:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7004:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7015:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7000:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7000:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7023:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7029:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7019:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7019:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6993:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6993:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6993:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7049:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7183:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_4d1558be3f9088f9d72974cfcf6d367bcbbe9fc3b903297007a1631283b4ea71_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7057:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7057:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7049:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4d1558be3f9088f9d72974cfcf6d367bcbbe9fc3b903297007a1631283b4ea71__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6927:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6942:4:9",
                "type": ""
              }
            ],
            "src": "6776:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7229:152:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7246:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7249:77:9",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7239:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7239:88:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7239:88:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7343:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7346:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7336:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7336:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7336:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7367:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7370:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "7360:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7360:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7360:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "7201:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7432:146:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7442:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7465:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7447:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7447:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7442:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7476:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7499:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7481:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7481:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7476:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7523:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7525:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7525:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7525:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7517:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7520:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7514:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7514:8:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7511:34:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7555:17:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7567:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7570:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7563:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7563:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7555:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7418:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7421:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7427:4:9",
                "type": ""
              }
            ],
            "src": "7387:191:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7632:300:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7642:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7665:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7647:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7647:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7642:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7676:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7699:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7681:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7681:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "7676:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7874:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7876:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7876:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7876:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7786:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "7779:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7779:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "7772:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7772:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "7794:1:9"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7801:66:9",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "7869:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "7797:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7797:74:9"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "7791:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7791:81:9"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "7768:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7768:105:9"
                  },
                  "nodeType": "YulIf",
                  "src": "7765:131:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7906:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7921:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7924:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "7917:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7917:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "7906:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7615:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7618:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "7624:7:9",
                "type": ""
              }
            ],
            "src": "7584:348:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7982:261:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7992:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8015:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "7997:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7997:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "7992:1:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8026:25:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8049:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "8031:17:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8031:20:9"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "8026:1:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8189:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8191:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8191:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8191:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8110:1:9"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8117:66:9",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8185:1:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8113:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8113:74:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8107:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8107:81:9"
                  },
                  "nodeType": "YulIf",
                  "src": "8104:107:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8221:16:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8232:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8235:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8228:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8228:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "8221:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7969:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7972:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "7978:3:9",
                "type": ""
              }
            ],
            "src": "7938:305:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8403:288:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8413:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8425:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8436:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8421:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8421:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8413:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8493:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8506:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8517:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8502:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8502:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8449:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8449:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8449:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8574:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8587:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8598:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8583:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8583:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8530:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8530:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8530:72:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8656:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8669:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8680:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8665:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8665:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8612:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8612:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8612:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8359:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8371:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8379:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8387:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8398:4:9",
                "type": ""
              }
            ],
            "src": "8249:442:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8739:48:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8749:32:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8774:5:9"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8767:6:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8767:13:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8760:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8760:21:9"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "8749:7:9"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8721:5:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "8731:7:9",
                "type": ""
              }
            ],
            "src": "8697:90:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8833:76:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8887:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8896:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8899:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8889:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8889:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8889:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8856:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8878:5:9"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "8863:14:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8863:21:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8853:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8853:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8846:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8846:40:9"
                  },
                  "nodeType": "YulIf",
                  "src": "8843:60:9"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8826:5:9",
                "type": ""
              }
            ],
            "src": "8793:116:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8975:77:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8985:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "9000:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8994:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8994:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8985:5:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9040:5:9"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "9016:23:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9016:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9016:30:9"
                }
              ]
            },
            "name": "abi_decode_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8953:6:9",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8961:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8969:5:9",
                "type": ""
              }
            ],
            "src": "8915:137:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9132:271:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9178:83:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "9180:77:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9180:79:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9180:79:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9153:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9162:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9149:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9149:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9174:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9145:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9145:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "9142:119:9"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "9271:125:9",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "9286:15:9",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9300:1:9",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "9290:6:9",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9315:71:9",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9358:9:9"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "9369:6:9"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9354:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9354:22:9"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9378:7:9"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "9325:28:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9325:61:9"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "9315:6:9"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9102:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9113:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9125:6:9",
                "type": ""
              }
            ],
            "src": "9058:345:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9515:59:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9537:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9545:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9533:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9533:14:9"
                      },
                      {
                        "hexValue": "5472616e73666572206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9549:17:9",
                        "type": "",
                        "value": "Transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9526:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9526:41:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9526:41:9"
                }
              ]
            },
            "name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9507:6:9",
                "type": ""
              }
            ],
            "src": "9409:165:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9726:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9736:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9802:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9807:2:9",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9743:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9743:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9736:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9908:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                      "nodeType": "YulIdentifier",
                      "src": "9819:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9819:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9819:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9921:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9932:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9937:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9928:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9928:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9921:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9714:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9722:3:9",
                "type": ""
              }
            ],
            "src": "9580:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10123:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10133:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10145:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10156:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10141:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10141:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10133:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10180:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10191:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10176:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10176:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10199:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10205:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10195:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10195:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10169:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10169:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10169:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10225:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10359:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10233:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10233:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10225:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10103:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10118:4:9",
                "type": ""
              }
            ],
            "src": "9952:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10483:119:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10505:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10513:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10501:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10501:14:9"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10517:34:9",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10494:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10494:58:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10494:58:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10573:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10581:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10569:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10569:15:9"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10586:8:9",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10562:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10562:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10562:33:9"
                }
              ]
            },
            "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "10475:6:9",
                "type": ""
              }
            ],
            "src": "10377:225:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10754:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10764:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10830:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10835:2:9",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10771:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10771:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10764:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10936:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                      "nodeType": "YulIdentifier",
                      "src": "10847:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10847:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10847:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10949:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10960:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10965:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10956:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10956:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10949:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10742:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10750:3:9",
                "type": ""
              }
            ],
            "src": "10608:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11151:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11161:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11173:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11184:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11169:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11169:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11161:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11208:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11219:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11204:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11204:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "11227:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11233:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11223:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11223:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11197:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11197:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11197:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11253:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "11387:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11261:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11261:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11253:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11131:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11146:4:9",
                "type": ""
              }
            ],
            "src": "10980:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11511:74:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11533:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11541:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11529:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11529:14:9"
                      },
                      {
                        "hexValue": "596f75206d7573742070726f7669646520616e20616d6f756e74203e2030",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11545:32:9",
                        "type": "",
                        "value": "You must provide an amount > 0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11522:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11522:56:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11522:56:9"
                }
              ]
            },
            "name": "store_literal_in_memory_ff38333bdb051021014af9f0b34b07a5e5e61e9aa119e6453f91b0459e567828",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11503:6:9",
                "type": ""
              }
            ],
            "src": "11405:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11737:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11747:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11813:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11818:2:9",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11754:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11754:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11747:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11919:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ff38333bdb051021014af9f0b34b07a5e5e61e9aa119e6453f91b0459e567828",
                      "nodeType": "YulIdentifier",
                      "src": "11830:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11830:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11830:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11932:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11943:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11948:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11939:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11939:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11932:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ff38333bdb051021014af9f0b34b07a5e5e61e9aa119e6453f91b0459e567828_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11725:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11733:3:9",
                "type": ""
              }
            ],
            "src": "11591:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12134:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12144:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12156:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12167:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12152:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12152:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12144:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12191:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12202:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12187:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12187:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12210:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12216:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12206:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12206:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12180:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12180:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12180:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12236:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12370:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ff38333bdb051021014af9f0b34b07a5e5e61e9aa119e6453f91b0459e567828_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12244:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12244:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12236:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ff38333bdb051021014af9f0b34b07a5e5e61e9aa119e6453f91b0459e567828__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12114:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12129:4:9",
                "type": ""
              }
            ],
            "src": "11963:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12494:69:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12516:6:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12524:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12512:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12512:14:9"
                      },
                      {
                        "hexValue": "596f7520646f6e27742068617665207468697320746f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12528:27:9",
                        "type": "",
                        "value": "You don't have this token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12505:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12505:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12505:51:9"
                }
              ]
            },
            "name": "store_literal_in_memory_ea93a5ddd20e0db9f85f0d808d7e00f7f5588f1685a85c41b9aa160efd023898",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12486:6:9",
                "type": ""
              }
            ],
            "src": "12388:175:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12715:220:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12725:74:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12791:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12796:2:9",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12732:58:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12732:67:9"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12725:3:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12897:3:9"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ea93a5ddd20e0db9f85f0d808d7e00f7f5588f1685a85c41b9aa160efd023898",
                      "nodeType": "YulIdentifier",
                      "src": "12808:88:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12808:93:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12808:93:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12910:19:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12921:3:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12926:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12917:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12917:12:9"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12910:3:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ea93a5ddd20e0db9f85f0d808d7e00f7f5588f1685a85c41b9aa160efd023898_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12703:3:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12711:3:9",
                "type": ""
              }
            ],
            "src": "12569:366:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13112:248:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13122:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13134:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13145:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13130:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13130:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13122:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13169:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13180:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13165:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13165:17:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13188:4:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13194:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13184:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13184:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13158:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13158:47:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13158:47:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13214:139:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13348:4:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ea93a5ddd20e0db9f85f0d808d7e00f7f5588f1685a85c41b9aa160efd023898_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13222:124:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13222:131:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13214:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ea93a5ddd20e0db9f85f0d808d7e00f7f5588f1685a85c41b9aa160efd023898__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13092:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13107:4:9",
                "type": ""
              }
            ],
            "src": "12941:419:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13492:206:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13502:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13514:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13525:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13510:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13510:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13502:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "13582:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13595:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13606:1:9",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13591:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13591:17:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13538:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13538:71:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13538:71:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13663:6:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13676:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13687:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13672:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13672:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13619:43:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13619:72:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13619:72:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13456:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13468:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13476:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13487:4:9",
                "type": ""
              }
            ],
            "src": "13366:332:9"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_IERC20_$814(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_IERC20_$814(value) {\n        if iszero(eq(value, cleanup_t_contract$_IERC20_$814(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_IERC20_$814(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_contract$_IERC20_$814(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$814t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$814(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$814t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$814(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_contract$_IERC20_$814(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_IERC20_$814(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_contract$_IERC20_$814(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_contract$_IERC20_$814(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4d1558be3f9088f9d72974cfcf6d367bcbbe9fc3b903297007a1631283b4ea71(memPtr) {\n\n        mstore(add(memPtr, 0), \"This token has not been allowed \")\n\n        mstore(add(memPtr, 32), \"yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_4d1558be3f9088f9d72974cfcf6d367bcbbe9fc3b903297007a1631283b4ea71_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_4d1558be3f9088f9d72974cfcf6d367bcbbe9fc3b903297007a1631283b4ea71(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4d1558be3f9088f9d72974cfcf6d367bcbbe9fc3b903297007a1631283b4ea71__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4d1558be3f9088f9d72974cfcf6d367bcbbe9fc3b903297007a1631283b4ea71_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ff38333bdb051021014af9f0b34b07a5e5e61e9aa119e6453f91b0459e567828(memPtr) {\n\n        mstore(add(memPtr, 0), \"You must provide an amount > 0\")\n\n    }\n\n    function abi_encode_t_stringliteral_ff38333bdb051021014af9f0b34b07a5e5e61e9aa119e6453f91b0459e567828_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_ff38333bdb051021014af9f0b34b07a5e5e61e9aa119e6453f91b0459e567828(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ff38333bdb051021014af9f0b34b07a5e5e61e9aa119e6453f91b0459e567828__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ff38333bdb051021014af9f0b34b07a5e5e61e9aa119e6453f91b0459e567828_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ea93a5ddd20e0db9f85f0d808d7e00f7f5588f1685a85c41b9aa160efd023898(memPtr) {\n\n        mstore(add(memPtr, 0), \"You don't have this token\")\n\n    }\n\n    function abi_encode_t_stringliteral_ea93a5ddd20e0db9f85f0d808d7e00f7f5588f1685a85c41b9aa160efd023898_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_ea93a5ddd20e0db9f85f0d808d7e00f7f5588f1685a85c41b9aa160efd023898(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ea93a5ddd20e0db9f85f0d808d7e00f7f5588f1685a85c41b9aa160efd023898__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ea93a5ddd20e0db9f85f0d808d7e00f7f5588f1685a85c41b9aa160efd023898_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "245:1978:7:-:0;;;810:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;921:32:1;940:12;:10;;;:12;;:::i;:::-;921:18;;;:32;;:::i;:::-;873:16:7;854;:35;;;;929:42;895:9;;:77;;;;;;;;;;;;;;;;;;810:167;245:1978;;640:96:5;693:7;719:10;712:17;;640:96;:::o;2270:187:1:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:9:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;245:1978:7:-;;;;;;;",
  "deployedSourceMap": "245:1978:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:133;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1149:609;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2191:30;;;:::i;:::-;;650:47;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1668:101:1;;;:::i;:::-;;739:66:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;1036:85:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;324:31:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1918:198:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1762:348:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1012:133;1259:12:1;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1129:11:7::1;1098:13;:28;1112:13;1098:28;;;;;;;;;;;;;;;;:42;;;;;;;;;;;;;;;;;;1012:133:::0;;:::o;1149:609::-;1266:3;1226:44;;:13;:28;1240:13;1226:28;;;;;;;;;;;;;;;;;;;;;;;;;:44;;;1218:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1316:27;1346:8;:20;1355:10;1346:20;;;;;;;;;;;;;;;:35;1367:13;1346:35;;;;;;;;;;;;;;;1316:65;;1458:1;1442:7;:12;;;:17;1438:114;;1529:16;;1513:7;:12;;;1495:15;:30;;;;:::i;:::-;1494:51;;;;:::i;:::-;1469:7;:22;;:76;;;;1438:114;1573:15;1558:7;:12;;:30;;;;1612:7;1594;:14;;;:25;;;;;;;:::i;:::-;;;;;;;;1641:15;1626:7;:12;;:30;;;;1671:13;:26;;;1698:10;1718:4;1725:7;1671:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1663:90;;;;;;;;;;;;:::i;:::-;;;;;;;;;1212:546;1149:609;;:::o;2191:30::-;:::o;650:47::-;;;;;;;;;;;;;;;;;;;;;;:::o;1668:101:1:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;739:66:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1036:85:1:-;1082:7;1108:6;;;;;;;;;;;1101:13;;1036:85;:::o;324:31:7:-;;;;:::o;1918:198:1:-;1259:12;:10;:12::i;:::-;1248:23;;:7;:5;:7::i;:::-;:23;;;1240:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2026:1:::1;2006:22;;:8;:22;;::::0;1998:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;1762:348:7:-;1850:1;1840:7;:11;1832:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;1893:27;1923:8;:20;1932:10;1923:20;;;;;;;;;;;;;;;:35;1944:13;1923:35;;;;;;;;;;;;;;;1893:65;;1991:7;1973;:14;;;:25;;1965:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;2035:13;:22;;;2058:10;2070:7;2035:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1826:284;1762:348;;:::o;640:96:5:-;693:7;719:10;712:17;;640:96;:::o;2270:187:1:-;2343:16;2362:6;;;;;;;;;;;2343:25;;2387:8;2378:6;;:17;;;;;;;;;;;;;;;;;;2441:8;2410:40;;2431:8;2410:40;;;;;;;;;;;;2333:124;2270:187;:::o;88:117:9:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:110::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;568:110;;;:::o;684:150::-;771:38;803:5;771:38;:::i;:::-;764:5;761:49;751:77;;824:1;821;814:12;751:77;684:150;:::o;840:167::-;900:5;938:6;925:20;916:29;;954:47;995:5;954:47;:::i;:::-;840:167;;;;:::o;1013:122::-;1086:24;1104:5;1086:24;:::i;:::-;1079:5;1076:35;1066:63;;1125:1;1122;1115:12;1066:63;1013:122;:::o;1141:139::-;1187:5;1225:6;1212:20;1203:29;;1241:33;1268:5;1241:33;:::i;:::-;1141:139;;;;:::o;1286:502::-;1368:6;1376;1425:2;1413:9;1404:7;1400:23;1396:32;1393:119;;;1431:79;;:::i;:::-;1393:119;1551:1;1576:67;1635:7;1626:6;1615:9;1611:22;1576:67;:::i;:::-;1566:77;;1522:131;1692:2;1718:53;1763:7;1754:6;1743:9;1739:22;1718:53;:::i;:::-;1708:63;;1663:118;1286:502;;;;;:::o;1794:77::-;1831:7;1860:5;1849:16;;1794:77;;;:::o;1877:122::-;1950:24;1968:5;1950:24;:::i;:::-;1943:5;1940:35;1930:63;;1989:1;1986;1979:12;1930:63;1877:122;:::o;2005:139::-;2051:5;2089:6;2076:20;2067:29;;2105:33;2132:5;2105:33;:::i;:::-;2005:139;;;;:::o;2150:502::-;2232:6;2240;2289:2;2277:9;2268:7;2264:23;2260:32;2257:119;;;2295:79;;:::i;:::-;2257:119;2415:1;2440:67;2499:7;2490:6;2479:9;2475:22;2440:67;:::i;:::-;2430:77;;2386:131;2556:2;2582:53;2627:7;2618:6;2607:9;2603:22;2582:53;:::i;:::-;2572:63;;2527:118;2150:502;;;;;:::o;2658:357::-;2731:6;2780:2;2768:9;2759:7;2755:23;2751:32;2748:119;;;2786:79;;:::i;:::-;2748:119;2906:1;2931:67;2990:7;2981:6;2970:9;2966:22;2931:67;:::i;:::-;2921:77;;2877:131;2658:357;;;;:::o;3021:118::-;3108:24;3126:5;3108:24;:::i;:::-;3103:3;3096:37;3021:118;;:::o;3145:222::-;3238:4;3276:2;3265:9;3261:18;3253:26;;3289:71;3357:1;3346:9;3342:17;3333:6;3289:71;:::i;:::-;3145:222;;;;:::o;3373:502::-;3455:6;3463;3512:2;3500:9;3491:7;3487:23;3483:32;3480:119;;;3518:79;;:::i;:::-;3480:119;3638:1;3663:53;3708:7;3699:6;3688:9;3684:22;3663:53;:::i;:::-;3653:63;;3609:117;3765:2;3791:67;3850:7;3841:6;3830:9;3826:22;3791:67;:::i;:::-;3781:77;;3736:132;3373:502;;;;;:::o;3881:118::-;3968:24;3986:5;3968:24;:::i;:::-;3963:3;3956:37;3881:118;;:::o;4005:442::-;4154:4;4192:2;4181:9;4177:18;4169:26;;4205:71;4273:1;4262:9;4258:17;4249:6;4205:71;:::i;:::-;4286:72;4354:2;4343:9;4339:18;4330:6;4286:72;:::i;:::-;4368;4436:2;4425:9;4421:18;4412:6;4368:72;:::i;:::-;4005:442;;;;;;:::o;4453:222::-;4546:4;4584:2;4573:9;4569:18;4561:26;;4597:71;4665:1;4654:9;4650:17;4641:6;4597:71;:::i;:::-;4453:222;;;;:::o;4681:329::-;4740:6;4789:2;4777:9;4768:7;4764:23;4760:32;4757:119;;;4795:79;;:::i;:::-;4757:119;4915:1;4940:53;4985:7;4976:6;4965:9;4961:22;4940:53;:::i;:::-;4930:63;;4886:117;4681:329;;;;:::o;5016:169::-;5100:11;5134:6;5129:3;5122:19;5174:4;5169:3;5165:14;5150:29;;5016:169;;;;:::o;5191:182::-;5331:34;5327:1;5319:6;5315:14;5308:58;5191:182;:::o;5379:366::-;5521:3;5542:67;5606:2;5601:3;5542:67;:::i;:::-;5535:74;;5618:93;5707:3;5618:93;:::i;:::-;5736:2;5731:3;5727:12;5720:19;;5379:366;;;:::o;5751:419::-;5917:4;5955:2;5944:9;5940:18;5932:26;;6004:9;5998:4;5994:20;5990:1;5979:9;5975:17;5968:47;6032:131;6158:4;6032:131;:::i;:::-;6024:139;;5751:419;;;:::o;6176:222::-;6316:34;6312:1;6304:6;6300:14;6293:58;6385:5;6380:2;6372:6;6368:15;6361:30;6176:222;:::o;6404:366::-;6546:3;6567:67;6631:2;6626:3;6567:67;:::i;:::-;6560:74;;6643:93;6732:3;6643:93;:::i;:::-;6761:2;6756:3;6752:12;6745:19;;6404:366;;;:::o;6776:419::-;6942:4;6980:2;6969:9;6965:18;6957:26;;7029:9;7023:4;7019:20;7015:1;7004:9;7000:17;6993:47;7057:131;7183:4;7057:131;:::i;:::-;7049:139;;6776:419;;;:::o;7201:180::-;7249:77;7246:1;7239:88;7346:4;7343:1;7336:15;7370:4;7367:1;7360:15;7387:191;7427:4;7447:20;7465:1;7447:20;:::i;:::-;7442:25;;7481:20;7499:1;7481:20;:::i;:::-;7476:25;;7520:1;7517;7514:8;7511:34;;;7525:18;;:::i;:::-;7511:34;7570:1;7567;7563:9;7555:17;;7387:191;;;;:::o;7584:348::-;7624:7;7647:20;7665:1;7647:20;:::i;:::-;7642:25;;7681:20;7699:1;7681:20;:::i;:::-;7676:25;;7869:1;7801:66;7797:74;7794:1;7791:81;7786:1;7779:9;7772:17;7768:105;7765:131;;;7876:18;;:::i;:::-;7765:131;7924:1;7921;7917:9;7906:20;;7584:348;;;;:::o;7938:305::-;7978:3;7997:20;8015:1;7997:20;:::i;:::-;7992:25;;8031:20;8049:1;8031:20;:::i;:::-;8026:25;;8185:1;8117:66;8113:74;8110:1;8107:81;8104:107;;;8191:18;;:::i;:::-;8104:107;8235:1;8232;8228:9;8221:16;;7938:305;;;;:::o;8249:442::-;8398:4;8436:2;8425:9;8421:18;8413:26;;8449:71;8517:1;8506:9;8502:17;8493:6;8449:71;:::i;:::-;8530:72;8598:2;8587:9;8583:18;8574:6;8530:72;:::i;:::-;8612;8680:2;8669:9;8665:18;8656:6;8612:72;:::i;:::-;8249:442;;;;;;:::o;8697:90::-;8731:7;8774:5;8767:13;8760:21;8749:32;;8697:90;;;:::o;8793:116::-;8863:21;8878:5;8863:21;:::i;:::-;8856:5;8853:32;8843:60;;8899:1;8896;8889:12;8843:60;8793:116;:::o;8915:137::-;8969:5;9000:6;8994:13;8985:22;;9016:30;9040:5;9016:30;:::i;:::-;8915:137;;;;:::o;9058:345::-;9125:6;9174:2;9162:9;9153:7;9149:23;9145:32;9142:119;;;9180:79;;:::i;:::-;9142:119;9300:1;9325:61;9378:7;9369:6;9358:9;9354:22;9325:61;:::i;:::-;9315:71;;9271:125;9058:345;;;;:::o;9409:165::-;9549:17;9545:1;9537:6;9533:14;9526:41;9409:165;:::o;9580:366::-;9722:3;9743:67;9807:2;9802:3;9743:67;:::i;:::-;9736:74;;9819:93;9908:3;9819:93;:::i;:::-;9937:2;9932:3;9928:12;9921:19;;9580:366;;;:::o;9952:419::-;10118:4;10156:2;10145:9;10141:18;10133:26;;10205:9;10199:4;10195:20;10191:1;10180:9;10176:17;10169:47;10233:131;10359:4;10233:131;:::i;:::-;10225:139;;9952:419;;;:::o;10377:225::-;10517:34;10513:1;10505:6;10501:14;10494:58;10586:8;10581:2;10573:6;10569:15;10562:33;10377:225;:::o;10608:366::-;10750:3;10771:67;10835:2;10830:3;10771:67;:::i;:::-;10764:74;;10847:93;10936:3;10847:93;:::i;:::-;10965:2;10960:3;10956:12;10949:19;;10608:366;;;:::o;10980:419::-;11146:4;11184:2;11173:9;11169:18;11161:26;;11233:9;11227:4;11223:20;11219:1;11208:9;11204:17;11197:47;11261:131;11387:4;11261:131;:::i;:::-;11253:139;;10980:419;;;:::o;11405:180::-;11545:32;11541:1;11533:6;11529:14;11522:56;11405:180;:::o;11591:366::-;11733:3;11754:67;11818:2;11813:3;11754:67;:::i;:::-;11747:74;;11830:93;11919:3;11830:93;:::i;:::-;11948:2;11943:3;11939:12;11932:19;;11591:366;;;:::o;11963:419::-;12129:4;12167:2;12156:9;12152:18;12144:26;;12216:9;12210:4;12206:20;12202:1;12191:9;12187:17;12180:47;12244:131;12370:4;12244:131;:::i;:::-;12236:139;;11963:419;;;:::o;12388:175::-;12528:27;12524:1;12516:6;12512:14;12505:51;12388:175;:::o;12569:366::-;12711:3;12732:67;12796:2;12791:3;12732:67;:::i;:::-;12725:74;;12808:93;12897:3;12808:93;:::i;:::-;12926:2;12921:3;12917:12;12910:19;;12569:366;;;:::o;12941:419::-;13107:4;13145:2;13134:9;13130:18;13122:26;;13194:9;13188:4;13184:20;13180:1;13169:9;13165:17;13158:47;13222:131;13348:4;13222:131;:::i;:::-;13214:139;;12941:419;;;:::o;13366:332::-;13487:4;13525:2;13514:9;13510:18;13502:26;;13538:71;13606:1;13595:9;13591:17;13582:6;13538:71;:::i;:::-;13619:72;13687:2;13676:9;13672:18;13663:6;13619:72;:::i;:::-;13366:332;;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.13;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ncontract Stacking is Ownable {\n\n  AggregatorV3Interface internal priceFeed;\n\n  uint256 public rewardsPerSecond;\n\n  struct ERC20Staked {\n    uint256 date;\n    uint256 amount;\n    uint256 pendingRewards; // In case stacker adds more coin later we have to store how much reward he has accumulated before to add more\n  }\n\n  struct PoolInfo {\n    uint256 lastRewardBlock;\n    uint256 accRewardPerShare;\n  }\n\n  mapping(IERC20 => address) public allowedERC20s;\n  mapping(IERC20 => PoolInfo) pools;\n\n  mapping(address => mapping(IERC20 => ERC20Staked)) public stackers;\n\n  constructor(uint256 _rewardPerSecond) {\n    rewardsPerSecond = _rewardPerSecond;\n    priceFeed = AggregatorV3Interface(0x9326BFA02ADD2366b30bacB125260Af641031331);\n  }\n\n  /// Owner acl an ERC20 token\n  function allowToken(IERC20 _tokenAddress, address _aggregator) onlyOwner public {\n    allowedERC20s[_tokenAddress] = _aggregator;\n  }\n\n  function deposit(IERC20 _erc20Address, uint256 _amount) public {\n    require(allowedERC20s[_erc20Address] != address(0x0), \"This token has not been allowed yet\");\n    ERC20Staked storage stacker = stackers[msg.sender][_erc20Address];\n\n    // We already have a staking for this address\n    if (stacker.date != 0) {\n      stacker.pendingRewards = (block.timestamp - stacker.date) * rewardsPerSecond;\n    }\n\n    stacker.date = block.timestamp;\n    stacker.amount += _amount;\n\n    stacker.date = block.timestamp;\n\n    require(_erc20Address.transferFrom(msg.sender, address(this), _amount), \"Transfer failed\");\n  }\n\n  function withdraw(IERC20 _erc20Address, uint256 _amount) public {\n    require(_amount > 0, \"You must provide an amount > 0\");\n\n    ERC20Staked storage stacker = stackers[msg.sender][_erc20Address];\n\n    require(stacker.amount >= _amount, \"You don't have this token\");\n\n    _erc20Address.transfer(msg.sender, _amount);\n\n    // todo: send reward\n\n  }\n\n  function calculate(uint256 _seconds, IERC20 _tokenAddress) private {\n\n  }\n\n  function claim() public {\n\n  }\n}\n",
  "sourcePath": "/Users/tonted/alyra/AlyraStacking/contracts/Stacking.sol",
  "ast": {
    "absolutePath": "project:/contracts/Stacking.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "Context": [
        861
      ],
      "IERC20": [
        814
      ],
      "Ownable": [
        150
      ],
      "Stacking": [
        1101
      ]
    },
    "id": 1102,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 886,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 887,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 151,
        "src": "57:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 888,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 46,
        "src": "110:76:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 889,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 815,
        "src": "187:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 890,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150,
              "src": "266:7:7"
            },
            "id": 891,
            "nodeType": "InheritanceSpecifier",
            "src": "266:7:7"
          }
        ],
        "canonicalName": "Stacking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1101,
        "linearizedBaseContracts": [
          1101,
          150,
          861
        ],
        "name": "Stacking",
        "nameLocation": "254:8:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 894,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "310:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 1101,
            "src": "279:40:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 893,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 892,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "279:21:7"
              },
              "referencedDeclaration": 45,
              "src": "279:21:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "eacdaabc",
            "id": 896,
            "mutability": "mutable",
            "name": "rewardsPerSecond",
            "nameLocation": "339:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 1101,
            "src": "324:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 895,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "324:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Stacking.ERC20Staked",
            "id": 903,
            "members": [
              {
                "constant": false,
                "id": 898,
                "mutability": "mutable",
                "name": "date",
                "nameLocation": "393:4:7",
                "nodeType": "VariableDeclaration",
                "scope": 903,
                "src": "385:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 897,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "385:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 900,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "411:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 903,
                "src": "403:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 899,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "403:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 902,
                "mutability": "mutable",
                "name": "pendingRewards",
                "nameLocation": "431:14:7",
                "nodeType": "VariableDeclaration",
                "scope": 903,
                "src": "423:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 901,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "423:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ERC20Staked",
            "nameLocation": "367:11:7",
            "nodeType": "StructDefinition",
            "scope": 1101,
            "src": "360:201:7",
            "visibility": "public"
          },
          {
            "canonicalName": "Stacking.PoolInfo",
            "id": 908,
            "members": [
              {
                "constant": false,
                "id": 905,
                "mutability": "mutable",
                "name": "lastRewardBlock",
                "nameLocation": "595:15:7",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "587:23:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 904,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "587:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 907,
                "mutability": "mutable",
                "name": "accRewardPerShare",
                "nameLocation": "624:17:7",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "616:25:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 906,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "616:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PoolInfo",
            "nameLocation": "572:8:7",
            "nodeType": "StructDefinition",
            "scope": 1101,
            "src": "565:81:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "69cc6af4",
            "id": 913,
            "mutability": "mutable",
            "name": "allowedERC20s",
            "nameLocation": "684:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 1101,
            "src": "650:47:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_address_$",
              "typeString": "mapping(contract IERC20 => address)"
            },
            "typeName": {
              "id": 912,
              "keyType": {
                "id": 910,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 909,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 814,
                  "src": "658:6:7"
                },
                "referencedDeclaration": 814,
                "src": "658:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$814",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "650:26:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_address_$",
                "typeString": "mapping(contract IERC20 => address)"
              },
              "valueType": {
                "id": 911,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "668:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 919,
            "mutability": "mutable",
            "name": "pools",
            "nameLocation": "729:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 1101,
            "src": "701:33:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_struct$_PoolInfo_$908_storage_$",
              "typeString": "mapping(contract IERC20 => struct Stacking.PoolInfo)"
            },
            "typeName": {
              "id": 918,
              "keyType": {
                "id": 915,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 914,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 814,
                  "src": "709:6:7"
                },
                "referencedDeclaration": 814,
                "src": "709:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$814",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "701:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_struct$_PoolInfo_$908_storage_$",
                "typeString": "mapping(contract IERC20 => struct Stacking.PoolInfo)"
              },
              "valueType": {
                "id": 917,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 916,
                  "name": "PoolInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 908,
                  "src": "719:8:7"
                },
                "referencedDeclaration": 908,
                "src": "719:8:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolInfo_$908_storage_ptr",
                  "typeString": "struct Stacking.PoolInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "83243289",
            "id": 927,
            "mutability": "mutable",
            "name": "stackers",
            "nameLocation": "797:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1101,
            "src": "739:66:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$814_$_t_struct$_ERC20Staked_$903_storage_$_$",
              "typeString": "mapping(address => mapping(contract IERC20 => struct Stacking.ERC20Staked))"
            },
            "typeName": {
              "id": 926,
              "keyType": {
                "id": 920,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "747:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "739:50:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$814_$_t_struct$_ERC20Staked_$903_storage_$_$",
                "typeString": "mapping(address => mapping(contract IERC20 => struct Stacking.ERC20Staked))"
              },
              "valueType": {
                "id": 925,
                "keyType": {
                  "id": 922,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 921,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 814,
                    "src": "766:6:7"
                  },
                  "referencedDeclaration": 814,
                  "src": "766:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$814",
                    "typeString": "contract IERC20"
                  }
                },
                "nodeType": "Mapping",
                "src": "758:30:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_struct$_ERC20Staked_$903_storage_$",
                  "typeString": "mapping(contract IERC20 => struct Stacking.ERC20Staked)"
                },
                "valueType": {
                  "id": 924,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 923,
                    "name": "ERC20Staked",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 903,
                    "src": "776:11:7"
                  },
                  "referencedDeclaration": 903,
                  "src": "776:11:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                    "typeString": "struct Stacking.ERC20Staked"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 942,
              "nodeType": "Block",
              "src": "848:129:7",
              "statements": [
                {
                  "expression": {
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 932,
                      "name": "rewardsPerSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 896,
                      "src": "854:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 933,
                      "name": "_rewardPerSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 929,
                      "src": "873:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "854:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "854:35:7"
                },
                {
                  "expression": {
                    "id": 940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 936,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "895:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307839333236424641303241444432333636623330626163423132353236304166363431303331333331",
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "929:42:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x9326BFA02ADD2366b30bacB125260Af641031331"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 937,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "907:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "907:65:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "895:77:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 941,
                  "nodeType": "ExpressionStatement",
                  "src": "895:77:7"
                }
              ]
            },
            "id": 943,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 929,
                  "mutability": "mutable",
                  "name": "_rewardPerSecond",
                  "nameLocation": "830:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "822:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "821:26:7"
            },
            "returnParameters": {
              "id": 931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "848:0:7"
            },
            "scope": 1101,
            "src": "810:167:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 960,
              "nodeType": "Block",
              "src": "1092:53:7",
              "statements": [
                {
                  "expression": {
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 954,
                        "name": "allowedERC20s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "1098:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_address_$",
                          "typeString": "mapping(contract IERC20 => address)"
                        }
                      },
                      "id": 956,
                      "indexExpression": {
                        "id": 955,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "1112:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$814",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1098:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 957,
                      "name": "_aggregator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 949,
                      "src": "1129:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1098:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 959,
                  "nodeType": "ExpressionStatement",
                  "src": "1098:42:7"
                }
              ]
            },
            "documentation": {
              "id": 944,
              "nodeType": "StructuredDocumentation",
              "src": "981:28:7",
              "text": "Owner acl an ERC20 token"
            },
            "functionSelector": "21fcbf57",
            "id": 961,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 952,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 951,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "1075:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1075:9:7"
              }
            ],
            "name": "allowToken",
            "nameLocation": "1021:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "1039:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "1032:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$814",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 946,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 945,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 814,
                      "src": "1032:6:7"
                    },
                    "referencedDeclaration": 814,
                    "src": "1032:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$814",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "_aggregator",
                  "nameLocation": "1062:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "1054:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1031:43:7"
            },
            "returnParameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1092:0:7"
            },
            "scope": 1101,
            "src": "1012:133:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1044,
              "nodeType": "Block",
              "src": "1212:546:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 970,
                            "name": "allowedERC20s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 913,
                            "src": "1226:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_address_$",
                              "typeString": "mapping(contract IERC20 => address)"
                            }
                          },
                          "id": 972,
                          "indexExpression": {
                            "id": 971,
                            "name": "_erc20Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 964,
                            "src": "1240:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$814",
                              "typeString": "contract IERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1226:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1266:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1258:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 973,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1258:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1258:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1226:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e20686173206e6f74206265656e20616c6c6f77656420796574",
                        "id": 978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1272:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d1558be3f9088f9d72974cfcf6d367bcbbe9fc3b903297007a1631283b4ea71",
                          "typeString": "literal_string \"This token has not been allowed yet\""
                        },
                        "value": "This token has not been allowed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d1558be3f9088f9d72974cfcf6d367bcbbe9fc3b903297007a1631283b4ea71",
                          "typeString": "literal_string \"This token has not been allowed yet\""
                        }
                      ],
                      "id": 969,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1218:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1218:92:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 980,
                  "nodeType": "ExpressionStatement",
                  "src": "1218:92:7"
                },
                {
                  "assignments": [
                    983
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 983,
                      "mutability": "mutable",
                      "name": "stacker",
                      "nameLocation": "1336:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1044,
                      "src": "1316:27:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                        "typeString": "struct Stacking.ERC20Staked"
                      },
                      "typeName": {
                        "id": 982,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 981,
                          "name": "ERC20Staked",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 903,
                          "src": "1316:11:7"
                        },
                        "referencedDeclaration": 903,
                        "src": "1316:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                          "typeString": "struct Stacking.ERC20Staked"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 990,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 984,
                        "name": "stackers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 927,
                        "src": "1346:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$814_$_t_struct$_ERC20Staked_$903_storage_$_$",
                          "typeString": "mapping(address => mapping(contract IERC20 => struct Stacking.ERC20Staked storage ref))"
                        }
                      },
                      "id": 987,
                      "indexExpression": {
                        "expression": {
                          "id": 985,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1355:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1355:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1346:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_struct$_ERC20Staked_$903_storage_$",
                        "typeString": "mapping(contract IERC20 => struct Stacking.ERC20Staked storage ref)"
                      }
                    },
                    "id": 989,
                    "indexExpression": {
                      "id": 988,
                      "name": "_erc20Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "1367:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$814",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1346:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Staked_$903_storage",
                      "typeString": "struct Stacking.ERC20Staked storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1316:65:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 991,
                        "name": "stacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "1442:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                          "typeString": "struct Stacking.ERC20Staked storage pointer"
                        }
                      },
                      "id": 992,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "date",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 898,
                      "src": "1442:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1458:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1442:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1009,
                  "nodeType": "IfStatement",
                  "src": "1438:114:7",
                  "trueBody": {
                    "id": 1008,
                    "nodeType": "Block",
                    "src": "1461:91:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 995,
                              "name": "stacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 983,
                              "src": "1469:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                                "typeString": "struct Stacking.ERC20Staked storage pointer"
                              }
                            },
                            "id": 997,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "pendingRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 902,
                            "src": "1469:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1002,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 998,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967292,
                                      "src": "1495:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 999,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "1495:15:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1000,
                                      "name": "stacker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 983,
                                      "src": "1513:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                                        "typeString": "struct Stacking.ERC20Staked storage pointer"
                                      }
                                    },
                                    "id": 1001,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "date",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 898,
                                    "src": "1513:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1495:30:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1003,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1494:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1004,
                              "name": "rewardsPerSecond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 896,
                              "src": "1529:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1494:51:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1469:76:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1007,
                        "nodeType": "ExpressionStatement",
                        "src": "1469:76:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1010,
                        "name": "stacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "1558:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                          "typeString": "struct Stacking.ERC20Staked storage pointer"
                        }
                      },
                      "id": 1012,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "date",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 898,
                      "src": "1558:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1013,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1573:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1573:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1558:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "1558:30:7"
                },
                {
                  "expression": {
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1017,
                        "name": "stacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "1594:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                          "typeString": "struct Stacking.ERC20Staked storage pointer"
                        }
                      },
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 900,
                      "src": "1594:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1020,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 966,
                      "src": "1612:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1594:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "1594:25:7"
                },
                {
                  "expression": {
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1023,
                        "name": "stacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "1626:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                          "typeString": "struct Stacking.ERC20Staked storage pointer"
                        }
                      },
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "date",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 898,
                      "src": "1626:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1026,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1641:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1641:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1626:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1033,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1698:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1698:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1037,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1718:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Stacking_$1101",
                                  "typeString": "contract Stacking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Stacking_$1101",
                                  "typeString": "contract Stacking"
                                }
                              ],
                              "id": 1036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1710:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1035,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1710:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1710:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1039,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 966,
                            "src": "1725:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1031,
                            "name": "_erc20Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 964,
                            "src": "1671:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$814",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 813,
                          "src": "1671:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1671:62:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c6564",
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1735:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        },
                        "value": "Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        }
                      ],
                      "id": 1030,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1663:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1663:90:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "1663:90:7"
                }
              ]
            },
            "functionSelector": "47e7ef24",
            "id": 1045,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1158:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "_erc20Address",
                  "nameLocation": "1173:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "1166:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$814",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 963,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 962,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 814,
                      "src": "1166:6:7"
                    },
                    "referencedDeclaration": 814,
                    "src": "1166:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$814",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 966,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1196:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "1188:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1165:39:7"
            },
            "returnParameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1212:0:7"
            },
            "scope": 1101,
            "src": "1149:609:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1086,
              "nodeType": "Block",
              "src": "1826:284:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1054,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1050,
                          "src": "1840:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1850:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1840:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d7573742070726f7669646520616e20616d6f756e74203e2030",
                        "id": 1057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1853:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff38333bdb051021014af9f0b34b07a5e5e61e9aa119e6453f91b0459e567828",
                          "typeString": "literal_string \"You must provide an amount > 0\""
                        },
                        "value": "You must provide an amount > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff38333bdb051021014af9f0b34b07a5e5e61e9aa119e6453f91b0459e567828",
                          "typeString": "literal_string \"You must provide an amount > 0\""
                        }
                      ],
                      "id": 1053,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1832:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1832:54:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1059,
                  "nodeType": "ExpressionStatement",
                  "src": "1832:54:7"
                },
                {
                  "assignments": [
                    1062
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1062,
                      "mutability": "mutable",
                      "name": "stacker",
                      "nameLocation": "1913:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1086,
                      "src": "1893:27:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                        "typeString": "struct Stacking.ERC20Staked"
                      },
                      "typeName": {
                        "id": 1061,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1060,
                          "name": "ERC20Staked",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 903,
                          "src": "1893:11:7"
                        },
                        "referencedDeclaration": 903,
                        "src": "1893:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                          "typeString": "struct Stacking.ERC20Staked"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1069,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1063,
                        "name": "stackers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 927,
                        "src": "1923:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$814_$_t_struct$_ERC20Staked_$903_storage_$_$",
                          "typeString": "mapping(address => mapping(contract IERC20 => struct Stacking.ERC20Staked storage ref))"
                        }
                      },
                      "id": 1066,
                      "indexExpression": {
                        "expression": {
                          "id": 1064,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1932:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1932:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1923:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_struct$_ERC20Staked_$903_storage_$",
                        "typeString": "mapping(contract IERC20 => struct Stacking.ERC20Staked storage ref)"
                      }
                    },
                    "id": 1068,
                    "indexExpression": {
                      "id": 1067,
                      "name": "_erc20Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "1944:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$814",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1923:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Staked_$903_storage",
                      "typeString": "struct Stacking.ERC20Staked storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1893:65:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1071,
                            "name": "stacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "1973:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                              "typeString": "struct Stacking.ERC20Staked storage pointer"
                            }
                          },
                          "id": 1072,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 900,
                          "src": "1973:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1073,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1050,
                          "src": "1991:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1973:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e27742068617665207468697320746f6b656e",
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2000:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea93a5ddd20e0db9f85f0d808d7e00f7f5588f1685a85c41b9aa160efd023898",
                          "typeString": "literal_string \"You don't have this token\""
                        },
                        "value": "You don't have this token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea93a5ddd20e0db9f85f0d808d7e00f7f5588f1685a85c41b9aa160efd023898",
                          "typeString": "literal_string \"You don't have this token\""
                        }
                      ],
                      "id": 1070,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1965:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1965:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1077,
                  "nodeType": "ExpressionStatement",
                  "src": "1965:63:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1081,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2058:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2058:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1083,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "2070:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1078,
                        "name": "_erc20Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1048,
                        "src": "2035:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$814",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 781,
                      "src": "2035:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2035:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1085,
                  "nodeType": "ExpressionStatement",
                  "src": "2035:43:7"
                }
              ]
            },
            "functionSelector": "f3fef3a3",
            "id": 1087,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1771:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1048,
                  "mutability": "mutable",
                  "name": "_erc20Address",
                  "nameLocation": "1787:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "1780:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$814",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1047,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1046,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 814,
                      "src": "1780:6:7"
                    },
                    "referencedDeclaration": 814,
                    "src": "1780:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$814",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1050,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1810:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "1802:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1802:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1779:39:7"
            },
            "returnParameters": {
              "id": 1052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1826:0:7"
            },
            "scope": 1101,
            "src": "1762:348:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1095,
              "nodeType": "Block",
              "src": "2181:6:7",
              "statements": []
            },
            "id": 1096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculate",
            "nameLocation": "2123:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1089,
                  "mutability": "mutable",
                  "name": "_seconds",
                  "nameLocation": "2141:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "2133:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1092,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "2158:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "2151:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$814",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1091,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1090,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 814,
                      "src": "2151:6:7"
                    },
                    "referencedDeclaration": 814,
                    "src": "2151:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$814",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2132:40:7"
            },
            "returnParameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2181:0:7"
            },
            "scope": 1101,
            "src": "2114:73:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1099,
              "nodeType": "Block",
              "src": "2215:6:7",
              "statements": []
            },
            "functionSelector": "4e71d92d",
            "id": 1100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "2200:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2205:2:7"
            },
            "returnParameters": {
              "id": 1098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2215:0:7"
            },
            "scope": 1101,
            "src": "2191:30:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1102,
        "src": "245:1978:7",
        "usedErrors": []
      }
    ],
    "src": "32:2192:7"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/Stacking.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        45
      ],
      "Context": [
        861
      ],
      "IERC20": [
        814
      ],
      "Ownable": [
        150
      ],
      "Stacking": [
        1101
      ]
    },
    "id": 1102,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 886,
        "literals": [
          "solidity",
          "0.8",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 887,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 151,
        "src": "57:52:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 888,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 46,
        "src": "110:76:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 889,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1102,
        "sourceUnit": 815,
        "src": "187:56:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 890,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 150,
              "src": "266:7:7"
            },
            "id": 891,
            "nodeType": "InheritanceSpecifier",
            "src": "266:7:7"
          }
        ],
        "canonicalName": "Stacking",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1101,
        "linearizedBaseContracts": [
          1101,
          150,
          861
        ],
        "name": "Stacking",
        "nameLocation": "254:8:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 894,
            "mutability": "mutable",
            "name": "priceFeed",
            "nameLocation": "310:9:7",
            "nodeType": "VariableDeclaration",
            "scope": 1101,
            "src": "279:40:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
              "typeString": "contract AggregatorV3Interface"
            },
            "typeName": {
              "id": 893,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 892,
                "name": "AggregatorV3Interface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "279:21:7"
              },
              "referencedDeclaration": 45,
              "src": "279:21:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                "typeString": "contract AggregatorV3Interface"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "eacdaabc",
            "id": 896,
            "mutability": "mutable",
            "name": "rewardsPerSecond",
            "nameLocation": "339:16:7",
            "nodeType": "VariableDeclaration",
            "scope": 1101,
            "src": "324:31:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 895,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "324:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Stacking.ERC20Staked",
            "id": 903,
            "members": [
              {
                "constant": false,
                "id": 898,
                "mutability": "mutable",
                "name": "date",
                "nameLocation": "393:4:7",
                "nodeType": "VariableDeclaration",
                "scope": 903,
                "src": "385:12:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 897,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "385:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 900,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "411:6:7",
                "nodeType": "VariableDeclaration",
                "scope": 903,
                "src": "403:14:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 899,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "403:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 902,
                "mutability": "mutable",
                "name": "pendingRewards",
                "nameLocation": "431:14:7",
                "nodeType": "VariableDeclaration",
                "scope": 903,
                "src": "423:22:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 901,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "423:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ERC20Staked",
            "nameLocation": "367:11:7",
            "nodeType": "StructDefinition",
            "scope": 1101,
            "src": "360:201:7",
            "visibility": "public"
          },
          {
            "canonicalName": "Stacking.PoolInfo",
            "id": 908,
            "members": [
              {
                "constant": false,
                "id": 905,
                "mutability": "mutable",
                "name": "lastRewardBlock",
                "nameLocation": "595:15:7",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "587:23:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 904,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "587:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 907,
                "mutability": "mutable",
                "name": "accRewardPerShare",
                "nameLocation": "624:17:7",
                "nodeType": "VariableDeclaration",
                "scope": 908,
                "src": "616:25:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 906,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "616:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PoolInfo",
            "nameLocation": "572:8:7",
            "nodeType": "StructDefinition",
            "scope": 1101,
            "src": "565:81:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "69cc6af4",
            "id": 913,
            "mutability": "mutable",
            "name": "allowedERC20s",
            "nameLocation": "684:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 1101,
            "src": "650:47:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_address_$",
              "typeString": "mapping(contract IERC20 => address)"
            },
            "typeName": {
              "id": 912,
              "keyType": {
                "id": 910,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 909,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 814,
                  "src": "658:6:7"
                },
                "referencedDeclaration": 814,
                "src": "658:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$814",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "650:26:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_address_$",
                "typeString": "mapping(contract IERC20 => address)"
              },
              "valueType": {
                "id": 911,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "668:7:7",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 919,
            "mutability": "mutable",
            "name": "pools",
            "nameLocation": "729:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 1101,
            "src": "701:33:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_struct$_PoolInfo_$908_storage_$",
              "typeString": "mapping(contract IERC20 => struct Stacking.PoolInfo)"
            },
            "typeName": {
              "id": 918,
              "keyType": {
                "id": 915,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 914,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 814,
                  "src": "709:6:7"
                },
                "referencedDeclaration": 814,
                "src": "709:6:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$814",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "701:27:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_struct$_PoolInfo_$908_storage_$",
                "typeString": "mapping(contract IERC20 => struct Stacking.PoolInfo)"
              },
              "valueType": {
                "id": 917,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 916,
                  "name": "PoolInfo",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 908,
                  "src": "719:8:7"
                },
                "referencedDeclaration": 908,
                "src": "719:8:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PoolInfo_$908_storage_ptr",
                  "typeString": "struct Stacking.PoolInfo"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "83243289",
            "id": 927,
            "mutability": "mutable",
            "name": "stackers",
            "nameLocation": "797:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1101,
            "src": "739:66:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$814_$_t_struct$_ERC20Staked_$903_storage_$_$",
              "typeString": "mapping(address => mapping(contract IERC20 => struct Stacking.ERC20Staked))"
            },
            "typeName": {
              "id": 926,
              "keyType": {
                "id": 920,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "747:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "739:50:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$814_$_t_struct$_ERC20Staked_$903_storage_$_$",
                "typeString": "mapping(address => mapping(contract IERC20 => struct Stacking.ERC20Staked))"
              },
              "valueType": {
                "id": 925,
                "keyType": {
                  "id": 922,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 921,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 814,
                    "src": "766:6:7"
                  },
                  "referencedDeclaration": 814,
                  "src": "766:6:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$814",
                    "typeString": "contract IERC20"
                  }
                },
                "nodeType": "Mapping",
                "src": "758:30:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_struct$_ERC20Staked_$903_storage_$",
                  "typeString": "mapping(contract IERC20 => struct Stacking.ERC20Staked)"
                },
                "valueType": {
                  "id": 924,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 923,
                    "name": "ERC20Staked",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 903,
                    "src": "776:11:7"
                  },
                  "referencedDeclaration": 903,
                  "src": "776:11:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                    "typeString": "struct Stacking.ERC20Staked"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 942,
              "nodeType": "Block",
              "src": "848:129:7",
              "statements": [
                {
                  "expression": {
                    "id": 934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 932,
                      "name": "rewardsPerSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 896,
                      "src": "854:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 933,
                      "name": "_rewardPerSecond",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 929,
                      "src": "873:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "854:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 935,
                  "nodeType": "ExpressionStatement",
                  "src": "854:35:7"
                },
                {
                  "expression": {
                    "id": 940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 936,
                      "name": "priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "895:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307839333236424641303241444432333636623330626163423132353236304166363431303331333331",
                          "id": 938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "929:42:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x9326BFA02ADD2366b30bacB125260Af641031331"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 937,
                        "name": "AggregatorV3Interface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "907:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$45_$",
                          "typeString": "type(contract AggregatorV3Interface)"
                        }
                      },
                      "id": 939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "907:65:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                        "typeString": "contract AggregatorV3Interface"
                      }
                    },
                    "src": "895:77:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$45",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "id": 941,
                  "nodeType": "ExpressionStatement",
                  "src": "895:77:7"
                }
              ]
            },
            "id": 943,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 930,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 929,
                  "mutability": "mutable",
                  "name": "_rewardPerSecond",
                  "nameLocation": "830:16:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 943,
                  "src": "822:24:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 928,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "822:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "821:26:7"
            },
            "returnParameters": {
              "id": 931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "848:0:7"
            },
            "scope": 1101,
            "src": "810:167:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 960,
              "nodeType": "Block",
              "src": "1092:53:7",
              "statements": [
                {
                  "expression": {
                    "id": 958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 954,
                        "name": "allowedERC20s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 913,
                        "src": "1098:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_address_$",
                          "typeString": "mapping(contract IERC20 => address)"
                        }
                      },
                      "id": 956,
                      "indexExpression": {
                        "id": 955,
                        "name": "_tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 947,
                        "src": "1112:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$814",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1098:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 957,
                      "name": "_aggregator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 949,
                      "src": "1129:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1098:42:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 959,
                  "nodeType": "ExpressionStatement",
                  "src": "1098:42:7"
                }
              ]
            },
            "documentation": {
              "id": 944,
              "nodeType": "StructuredDocumentation",
              "src": "981:28:7",
              "text": "Owner acl an ERC20 token"
            },
            "functionSelector": "21fcbf57",
            "id": 961,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 952,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 951,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 92,
                  "src": "1075:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1075:9:7"
              }
            ],
            "name": "allowToken",
            "nameLocation": "1021:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 947,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "1039:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "1032:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$814",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 946,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 945,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 814,
                      "src": "1032:6:7"
                    },
                    "referencedDeclaration": 814,
                    "src": "1032:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$814",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 949,
                  "mutability": "mutable",
                  "name": "_aggregator",
                  "nameLocation": "1062:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 961,
                  "src": "1054:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 948,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1054:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1031:43:7"
            },
            "returnParameters": {
              "id": 953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1092:0:7"
            },
            "scope": 1101,
            "src": "1012:133:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1044,
              "nodeType": "Block",
              "src": "1212:546:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 970,
                            "name": "allowedERC20s",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 913,
                            "src": "1226:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_address_$",
                              "typeString": "mapping(contract IERC20 => address)"
                            }
                          },
                          "id": 972,
                          "indexExpression": {
                            "id": 971,
                            "name": "_erc20Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 964,
                            "src": "1240:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$814",
                              "typeString": "contract IERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1226:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "307830",
                              "id": 975,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1266:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0x0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1258:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 973,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1258:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1258:12:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1226:44:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468697320746f6b656e20686173206e6f74206265656e20616c6c6f77656420796574",
                        "id": 978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1272:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d1558be3f9088f9d72974cfcf6d367bcbbe9fc3b903297007a1631283b4ea71",
                          "typeString": "literal_string \"This token has not been allowed yet\""
                        },
                        "value": "This token has not been allowed yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d1558be3f9088f9d72974cfcf6d367bcbbe9fc3b903297007a1631283b4ea71",
                          "typeString": "literal_string \"This token has not been allowed yet\""
                        }
                      ],
                      "id": 969,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1218:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1218:92:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 980,
                  "nodeType": "ExpressionStatement",
                  "src": "1218:92:7"
                },
                {
                  "assignments": [
                    983
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 983,
                      "mutability": "mutable",
                      "name": "stacker",
                      "nameLocation": "1336:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1044,
                      "src": "1316:27:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                        "typeString": "struct Stacking.ERC20Staked"
                      },
                      "typeName": {
                        "id": 982,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 981,
                          "name": "ERC20Staked",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 903,
                          "src": "1316:11:7"
                        },
                        "referencedDeclaration": 903,
                        "src": "1316:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                          "typeString": "struct Stacking.ERC20Staked"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 990,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 984,
                        "name": "stackers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 927,
                        "src": "1346:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$814_$_t_struct$_ERC20Staked_$903_storage_$_$",
                          "typeString": "mapping(address => mapping(contract IERC20 => struct Stacking.ERC20Staked storage ref))"
                        }
                      },
                      "id": 987,
                      "indexExpression": {
                        "expression": {
                          "id": 985,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1355:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1355:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1346:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_struct$_ERC20Staked_$903_storage_$",
                        "typeString": "mapping(contract IERC20 => struct Stacking.ERC20Staked storage ref)"
                      }
                    },
                    "id": 989,
                    "indexExpression": {
                      "id": 988,
                      "name": "_erc20Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 964,
                      "src": "1367:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$814",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1346:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Staked_$903_storage",
                      "typeString": "struct Stacking.ERC20Staked storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1316:65:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 991,
                        "name": "stacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "1442:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                          "typeString": "struct Stacking.ERC20Staked storage pointer"
                        }
                      },
                      "id": 992,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "date",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 898,
                      "src": "1442:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1458:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1442:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1009,
                  "nodeType": "IfStatement",
                  "src": "1438:114:7",
                  "trueBody": {
                    "id": 1008,
                    "nodeType": "Block",
                    "src": "1461:91:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 995,
                              "name": "stacker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 983,
                              "src": "1469:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                                "typeString": "struct Stacking.ERC20Staked storage pointer"
                              }
                            },
                            "id": 997,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "pendingRewards",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 902,
                            "src": "1469:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1002,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 998,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967292,
                                      "src": "1495:5:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 999,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "1495:15:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 1000,
                                      "name": "stacker",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 983,
                                      "src": "1513:7:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                                        "typeString": "struct Stacking.ERC20Staked storage pointer"
                                      }
                                    },
                                    "id": 1001,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "date",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 898,
                                    "src": "1513:12:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "1495:30:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1003,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "1494:32:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1004,
                              "name": "rewardsPerSecond",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 896,
                              "src": "1529:16:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1494:51:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1469:76:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1007,
                        "nodeType": "ExpressionStatement",
                        "src": "1469:76:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 1015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1010,
                        "name": "stacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "1558:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                          "typeString": "struct Stacking.ERC20Staked storage pointer"
                        }
                      },
                      "id": 1012,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "date",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 898,
                      "src": "1558:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1013,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1573:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1573:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1558:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1016,
                  "nodeType": "ExpressionStatement",
                  "src": "1558:30:7"
                },
                {
                  "expression": {
                    "id": 1021,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1017,
                        "name": "stacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "1594:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                          "typeString": "struct Stacking.ERC20Staked storage pointer"
                        }
                      },
                      "id": 1019,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 900,
                      "src": "1594:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1020,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 966,
                      "src": "1612:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1594:25:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1022,
                  "nodeType": "ExpressionStatement",
                  "src": "1594:25:7"
                },
                {
                  "expression": {
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 1023,
                        "name": "stacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 983,
                        "src": "1626:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                          "typeString": "struct Stacking.ERC20Staked storage pointer"
                        }
                      },
                      "id": 1025,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "date",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 898,
                      "src": "1626:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1026,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "1641:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1641:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1626:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1029,
                  "nodeType": "ExpressionStatement",
                  "src": "1626:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1033,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1698:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1034,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1698:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 1037,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "1718:4:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Stacking_$1101",
                                  "typeString": "contract Stacking"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Stacking_$1101",
                                  "typeString": "contract Stacking"
                                }
                              ],
                              "id": 1036,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1710:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1035,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1710:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1710:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1039,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 966,
                            "src": "1725:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1031,
                            "name": "_erc20Address",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 964,
                            "src": "1671:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$814",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1032,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 813,
                          "src": "1671:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1671:62:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c6564",
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1735:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        },
                        "value": "Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        }
                      ],
                      "id": 1030,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1663:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1663:90:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1043,
                  "nodeType": "ExpressionStatement",
                  "src": "1663:90:7"
                }
              ]
            },
            "functionSelector": "47e7ef24",
            "id": 1045,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1158:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 964,
                  "mutability": "mutable",
                  "name": "_erc20Address",
                  "nameLocation": "1173:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "1166:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$814",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 963,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 962,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 814,
                      "src": "1166:6:7"
                    },
                    "referencedDeclaration": 814,
                    "src": "1166:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$814",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 966,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1196:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1045,
                  "src": "1188:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 965,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1165:39:7"
            },
            "returnParameters": {
              "id": 968,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1212:0:7"
            },
            "scope": 1101,
            "src": "1149:609:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1086,
              "nodeType": "Block",
              "src": "1826:284:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1054,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1050,
                          "src": "1840:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1850:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1840:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d7573742070726f7669646520616e20616d6f756e74203e2030",
                        "id": 1057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1853:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff38333bdb051021014af9f0b34b07a5e5e61e9aa119e6453f91b0459e567828",
                          "typeString": "literal_string \"You must provide an amount > 0\""
                        },
                        "value": "You must provide an amount > 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff38333bdb051021014af9f0b34b07a5e5e61e9aa119e6453f91b0459e567828",
                          "typeString": "literal_string \"You must provide an amount > 0\""
                        }
                      ],
                      "id": 1053,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1832:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1832:54:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1059,
                  "nodeType": "ExpressionStatement",
                  "src": "1832:54:7"
                },
                {
                  "assignments": [
                    1062
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1062,
                      "mutability": "mutable",
                      "name": "stacker",
                      "nameLocation": "1913:7:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1086,
                      "src": "1893:27:7",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                        "typeString": "struct Stacking.ERC20Staked"
                      },
                      "typeName": {
                        "id": 1061,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1060,
                          "name": "ERC20Staked",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 903,
                          "src": "1893:11:7"
                        },
                        "referencedDeclaration": 903,
                        "src": "1893:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                          "typeString": "struct Stacking.ERC20Staked"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1069,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 1063,
                        "name": "stackers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 927,
                        "src": "1923:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IERC20_$814_$_t_struct$_ERC20Staked_$903_storage_$_$",
                          "typeString": "mapping(address => mapping(contract IERC20 => struct Stacking.ERC20Staked storage ref))"
                        }
                      },
                      "id": 1066,
                      "indexExpression": {
                        "expression": {
                          "id": 1064,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1932:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1932:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1923:20:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IERC20_$814_$_t_struct$_ERC20Staked_$903_storage_$",
                        "typeString": "mapping(contract IERC20 => struct Stacking.ERC20Staked storage ref)"
                      }
                    },
                    "id": 1068,
                    "indexExpression": {
                      "id": 1067,
                      "name": "_erc20Address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1048,
                      "src": "1944:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$814",
                        "typeString": "contract IERC20"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1923:35:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ERC20Staked_$903_storage",
                      "typeString": "struct Stacking.ERC20Staked storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1893:65:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1071,
                            "name": "stacker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "1973:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ERC20Staked_$903_storage_ptr",
                              "typeString": "struct Stacking.ERC20Staked storage pointer"
                            }
                          },
                          "id": 1072,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 900,
                          "src": "1973:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1073,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1050,
                          "src": "1991:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1973:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e27742068617665207468697320746f6b656e",
                        "id": 1075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2000:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea93a5ddd20e0db9f85f0d808d7e00f7f5588f1685a85c41b9aa160efd023898",
                          "typeString": "literal_string \"You don't have this token\""
                        },
                        "value": "You don't have this token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ea93a5ddd20e0db9f85f0d808d7e00f7f5588f1685a85c41b9aa160efd023898",
                          "typeString": "literal_string \"You don't have this token\""
                        }
                      ],
                      "id": 1070,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1965:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1965:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1077,
                  "nodeType": "ExpressionStatement",
                  "src": "1965:63:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1081,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2058:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1082,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2058:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1083,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1050,
                        "src": "2070:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1078,
                        "name": "_erc20Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1048,
                        "src": "2035:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$814",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1080,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 781,
                      "src": "2035:22:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1084,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2035:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1085,
                  "nodeType": "ExpressionStatement",
                  "src": "2035:43:7"
                }
              ]
            },
            "functionSelector": "f3fef3a3",
            "id": 1087,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1771:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1048,
                  "mutability": "mutable",
                  "name": "_erc20Address",
                  "nameLocation": "1787:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "1780:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$814",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1047,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1046,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 814,
                      "src": "1780:6:7"
                    },
                    "referencedDeclaration": 814,
                    "src": "1780:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$814",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1050,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1810:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1087,
                  "src": "1802:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1802:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1779:39:7"
            },
            "returnParameters": {
              "id": 1052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1826:0:7"
            },
            "scope": 1101,
            "src": "1762:348:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1095,
              "nodeType": "Block",
              "src": "2181:6:7",
              "statements": []
            },
            "id": 1096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculate",
            "nameLocation": "2123:9:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1089,
                  "mutability": "mutable",
                  "name": "_seconds",
                  "nameLocation": "2141:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "2133:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2133:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1092,
                  "mutability": "mutable",
                  "name": "_tokenAddress",
                  "nameLocation": "2158:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1096,
                  "src": "2151:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$814",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1091,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1090,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 814,
                      "src": "2151:6:7"
                    },
                    "referencedDeclaration": 814,
                    "src": "2151:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$814",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2132:40:7"
            },
            "returnParameters": {
              "id": 1094,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2181:0:7"
            },
            "scope": 1101,
            "src": "2114:73:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1099,
              "nodeType": "Block",
              "src": "2215:6:7",
              "statements": []
            },
            "functionSelector": "4e71d92d",
            "id": 1100,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "2200:5:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1097,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2205:2:7"
            },
            "returnParameters": {
              "id": 1098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2215:0:7"
            },
            "scope": 1101,
            "src": "2191:30:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1102,
        "src": "245:1978:7",
        "usedErrors": []
      }
    ],
    "src": "32:2192:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-05-01T14:42:13.582Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "allowToken(address,address)": {
        "notice": "Owner acl an ERC20 token"
      }
    },
    "version": 1
  }
}